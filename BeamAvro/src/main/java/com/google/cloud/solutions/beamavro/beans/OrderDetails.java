/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.google.cloud.solutions.beamavro.beans;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class OrderDetails extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -1100817581739472732L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"OrderDetails\",\"namespace\":\"com.google.cloud.solutions.beamavro.beans\",\"fields\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"timestamp\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"}},{\"name\":\"dt\",\"type\":{\"type\":\"int\",\"logicalType\":\"date\"}},{\"name\":\"items\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"OrderItem\",\"fields\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"price\",\"type\":\"float\"}]}}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<OrderDetails> ENCODER =
      new BinaryMessageEncoder<OrderDetails>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<OrderDetails> DECODER =
      new BinaryMessageDecoder<OrderDetails>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<OrderDetails> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<OrderDetails> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<OrderDetails>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this OrderDetails to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a OrderDetails from a ByteBuffer. */
  public static OrderDetails fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public long id;
  @Deprecated public org.joda.time.DateTime timestamp;
  @Deprecated public org.joda.time.LocalDate dt;
  @Deprecated public java.util.List<com.google.cloud.solutions.beamavro.beans.OrderItem> items;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public OrderDetails() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param timestamp The new value for timestamp
   * @param dt The new value for dt
   * @param items The new value for items
   */
  public OrderDetails(java.lang.Long id, org.joda.time.DateTime timestamp, org.joda.time.LocalDate dt, java.util.List<com.google.cloud.solutions.beamavro.beans.OrderItem> items) {
    this.id = id;
    this.timestamp = timestamp;
    this.dt = dt;
    this.items = items;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return timestamp;
    case 2: return dt;
    case 3: return items;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  protected static final org.apache.avro.data.TimeConversions.DateConversion DATE_CONVERSION = new org.apache.avro.data.TimeConversions.DateConversion();
  protected static final org.apache.avro.data.TimeConversions.TimeConversion TIME_CONVERSION = new org.apache.avro.data.TimeConversions.TimeConversion();
  protected static final org.apache.avro.data.TimeConversions.TimestampConversion TIMESTAMP_CONVERSION = new org.apache.avro.data.TimeConversions.TimestampConversion();
  protected static final org.apache.avro.Conversions.DecimalConversion DECIMAL_CONVERSION = new org.apache.avro.Conversions.DecimalConversion();

  private static final org.apache.avro.Conversion<?>[] conversions =
      new org.apache.avro.Conversion<?>[] {
      null,
      TIMESTAMP_CONVERSION,
      DATE_CONVERSION,
      null,
      null
  };

  @Override
  public org.apache.avro.Conversion<?> getConversion(int field) {
    return conversions[field];
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.Long)value$; break;
    case 1: timestamp = (org.joda.time.DateTime)value$; break;
    case 2: dt = (org.joda.time.LocalDate)value$; break;
    case 3: items = (java.util.List<com.google.cloud.solutions.beamavro.beans.OrderItem>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.Long getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.Long value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'timestamp' field.
   * @return The value of the 'timestamp' field.
   */
  public org.joda.time.DateTime getTimestamp() {
    return timestamp;
  }

  /**
   * Sets the value of the 'timestamp' field.
   * @param value the value to set.
   */
  public void setTimestamp(org.joda.time.DateTime value) {
    this.timestamp = value;
  }

  /**
   * Gets the value of the 'dt' field.
   * @return The value of the 'dt' field.
   */
  public org.joda.time.LocalDate getDt() {
    return dt;
  }

  /**
   * Sets the value of the 'dt' field.
   * @param value the value to set.
   */
  public void setDt(org.joda.time.LocalDate value) {
    this.dt = value;
  }

  /**
   * Gets the value of the 'items' field.
   * @return The value of the 'items' field.
   */
  public java.util.List<com.google.cloud.solutions.beamavro.beans.OrderItem> getItems() {
    return items;
  }

  /**
   * Sets the value of the 'items' field.
   * @param value the value to set.
   */
  public void setItems(java.util.List<com.google.cloud.solutions.beamavro.beans.OrderItem> value) {
    this.items = value;
  }

  /**
   * Creates a new OrderDetails RecordBuilder.
   * @return A new OrderDetails RecordBuilder
   */
  public static com.google.cloud.solutions.beamavro.beans.OrderDetails.Builder newBuilder() {
    return new com.google.cloud.solutions.beamavro.beans.OrderDetails.Builder();
  }

  /**
   * Creates a new OrderDetails RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new OrderDetails RecordBuilder
   */
  public static com.google.cloud.solutions.beamavro.beans.OrderDetails.Builder newBuilder(com.google.cloud.solutions.beamavro.beans.OrderDetails.Builder other) {
    return new com.google.cloud.solutions.beamavro.beans.OrderDetails.Builder(other);
  }

  /**
   * Creates a new OrderDetails RecordBuilder by copying an existing OrderDetails instance.
   * @param other The existing instance to copy.
   * @return A new OrderDetails RecordBuilder
   */
  public static com.google.cloud.solutions.beamavro.beans.OrderDetails.Builder newBuilder(com.google.cloud.solutions.beamavro.beans.OrderDetails other) {
    return new com.google.cloud.solutions.beamavro.beans.OrderDetails.Builder(other);
  }

  /**
   * RecordBuilder for OrderDetails instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<OrderDetails>
    implements org.apache.avro.data.RecordBuilder<OrderDetails> {

    private long id;
    private org.joda.time.DateTime timestamp;
    private org.joda.time.LocalDate dt;
    private java.util.List<com.google.cloud.solutions.beamavro.beans.OrderItem> items;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.google.cloud.solutions.beamavro.beans.OrderDetails.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[1].schema(), other.timestamp);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.dt)) {
        this.dt = data().deepCopy(fields()[2].schema(), other.dt);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.items)) {
        this.items = data().deepCopy(fields()[3].schema(), other.items);
        fieldSetFlags()[3] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing OrderDetails instance
     * @param other The existing instance to copy.
     */
    private Builder(com.google.cloud.solutions.beamavro.beans.OrderDetails other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[1].schema(), other.timestamp);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.dt)) {
        this.dt = data().deepCopy(fields()[2].schema(), other.dt);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.items)) {
        this.items = data().deepCopy(fields()[3].schema(), other.items);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.Long getId() {
      return id;
    }

    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public com.google.cloud.solutions.beamavro.beans.OrderDetails.Builder setId(long value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public com.google.cloud.solutions.beamavro.beans.OrderDetails.Builder clearId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'timestamp' field.
      * @return The value.
      */
    public org.joda.time.DateTime getTimestamp() {
      return timestamp;
    }

    /**
      * Sets the value of the 'timestamp' field.
      * @param value The value of 'timestamp'.
      * @return This builder.
      */
    public com.google.cloud.solutions.beamavro.beans.OrderDetails.Builder setTimestamp(org.joda.time.DateTime value) {
      validate(fields()[1], value);
      this.timestamp = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'timestamp' field has been set.
      * @return True if the 'timestamp' field has been set, false otherwise.
      */
    public boolean hasTimestamp() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'timestamp' field.
      * @return This builder.
      */
    public com.google.cloud.solutions.beamavro.beans.OrderDetails.Builder clearTimestamp() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'dt' field.
      * @return The value.
      */
    public org.joda.time.LocalDate getDt() {
      return dt;
    }

    /**
      * Sets the value of the 'dt' field.
      * @param value The value of 'dt'.
      * @return This builder.
      */
    public com.google.cloud.solutions.beamavro.beans.OrderDetails.Builder setDt(org.joda.time.LocalDate value) {
      validate(fields()[2], value);
      this.dt = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'dt' field has been set.
      * @return True if the 'dt' field has been set, false otherwise.
      */
    public boolean hasDt() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'dt' field.
      * @return This builder.
      */
    public com.google.cloud.solutions.beamavro.beans.OrderDetails.Builder clearDt() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'items' field.
      * @return The value.
      */
    public java.util.List<com.google.cloud.solutions.beamavro.beans.OrderItem> getItems() {
      return items;
    }

    /**
      * Sets the value of the 'items' field.
      * @param value The value of 'items'.
      * @return This builder.
      */
    public com.google.cloud.solutions.beamavro.beans.OrderDetails.Builder setItems(java.util.List<com.google.cloud.solutions.beamavro.beans.OrderItem> value) {
      validate(fields()[3], value);
      this.items = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'items' field has been set.
      * @return True if the 'items' field has been set, false otherwise.
      */
    public boolean hasItems() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'items' field.
      * @return This builder.
      */
    public com.google.cloud.solutions.beamavro.beans.OrderDetails.Builder clearItems() {
      items = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public OrderDetails build() {
      try {
        OrderDetails record = new OrderDetails();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.Long) defaultValue(fields()[0], record.getConversion(0));
        record.timestamp = fieldSetFlags()[1] ? this.timestamp : (org.joda.time.DateTime) defaultValue(fields()[1], record.getConversion(1));
        record.dt = fieldSetFlags()[2] ? this.dt : (org.joda.time.LocalDate) defaultValue(fields()[2], record.getConversion(2));
        record.items = fieldSetFlags()[3] ? this.items : (java.util.List<com.google.cloud.solutions.beamavro.beans.OrderItem>) defaultValue(fields()[3], record.getConversion(3));
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<OrderDetails>
    WRITER$ = (org.apache.avro.io.DatumWriter<OrderDetails>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<OrderDetails>
    READER$ = (org.apache.avro.io.DatumReader<OrderDetails>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
